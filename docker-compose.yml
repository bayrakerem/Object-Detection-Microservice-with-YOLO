version: '3.8'

services:
  object-detection:
    build: 
      context: .
      dockerfile: Dockerfile
    container_name: yolo-detection-service
    ports:
      - "8000:8000"
    volumes:
      # Mount test images directory
      - ./test_images:/app/test_images:ro
      # Mount logs directory for debugging
      - ./logs:/app/logs
    environment:
      - PYTHONPATH=/app
      - LOG_LEVEL=INFO
    networks:
      - detection-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8000/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s
    # Resource limits for production deployment
    deploy:
      resources:
        limits:
          cpus: '2.0'
          memory: 2G
        reservations:
          cpus: '0.5'
          memory: 512M

  # Optional: Redis cache for caching detection results
  redis-cache:
    image: redis:7-alpine
    container_name: detection-cache
    ports:
      - "6379:6379"
    volumes:
      - redis-data:/data
    networks:
      - detection-network
    restart: unless-stopped
    command: redis-server --appendonly yes --maxmemory 256mb --maxmemory-policy allkeys-lru
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3

volumes:
  redis-data:
    driver: local

networks:
  detection-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16 